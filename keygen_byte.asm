extern printf

section .data
keygen_bytes db 0xb8,0x04,0x00,0x00,0x00,0xbb,0x01,0x00,0x00,0x00,0xb9,0xa1,0x91,0x04,0x08,0xba,0x26,0x00,0x00,0x00,0xcd,0x80,0xb8,0x03,0x00,0x00,0x00,0x31,0xdb,0xb9,0x88,0x91,0x04,0x08,0xba,0x33,0x00,0x00,0x00,0xcd,0x80,0x31,0xc9,0xb8,0x80,0x80,0x04,0x08,0xbb,0x23,0x81,0x04,0x08,0xe8,0x5b,0x00,0x00,0x00,0x89,0xca,0xb9,0x19,0x00,0x00,0x00,0xb8,0x55,0x91,0x04,0x08,0xbb,0x88,0x91,0x04,0x08,0xd1,0xca,0x8a,0x44,0x08,0xff,0x8a,0x5c,0x0b,0xff,0x30,0xd8,0x30,0xd0,0x75,0x1b,0x49,0x75,0xe3,0xb8,0x04,0x00,0x00,0x00,0xbb,0x01,0x00,0x00,0x00,0xb9,0x24,0x91,0x04,0x08,0xba,0x26,0x00,0x00,0x00,0xcd,0x80,0xeb,0x16,0xb8,0x04,0x00,0x00,0x00,0xbb,0x01,0x00,0x00,0x00,0xb9,0x4a,0x91,0x04,0x08,0xba,0x0b,0x00,0x00,0x00,0xcd,0x80,0xb8,0x01,0x00,0x00,0x00,0x31,0xdb,0xcd,0x80,0x29,0xc3,0x31,0xc9,0x02,0x08,0xc1,0xc1,0x03,0x40,0x4b,0x75,0xf7,0xc3
keygen_bytes_len equ $ - keygen_bytes
fmt db "keygen: %x", 10, 0

keyxor db 0x1E,0xCD,0x2A,0xD5,0x34,0x87,0xFC,0x78,0x64,0x35,0x9D,0xEC,0xDE,0x15,0xAC,0x97,0x99,0xAF,0x96,0xDA,0x79,0x26,0x4F,0x32,0xE0
keyxor_len equ $ - keyxor
fmtpasswd db "Password = key ^ keygen = %s", 10, 0

section .bss
password resb 26

section .text
global main
main:
	push ebp
	mov ebp, esp

	mov ebx, keygen_bytes_len
	lea eax, [keygen_bytes]
	xor ecx, ecx

;---------key_generate----------
_loop:	
	add cl, [eax]
	rol ecx, 3
	inc eax
	dec ebx
	jnz _loop   
	
	push ecx
	push fmt
	call printf
	mov ebx, [esp+4]
	add esp, 0x8
;-----------keygen--------------
	
	xor eax, eax
	xor ecx, ecx
	mov ecx, keyxor_len

_decrypt:
	lea eax, [keyxor]
	ror ebx,1

	mov al, [eax + ecx*1 - 0x1]
	xor al, bl

	mov [password + ecx*1 - 0x1], al
	dec ecx
	jnz _decrypt

	push password
	push fmtpasswd
	call printf	

;------------end----------------
	mov esp, ebp
	pop ebp

	mov eax,0
	ret 0x80
	
